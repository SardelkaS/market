apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.auth.name }}-postgres-secret
  labels:
    app: {{ .Values.auth.name }}-postgres
data:
  POSTGRES_DB: {{ quote .Values.auth.postgres.dbName }}
  POSTGRES_USER: {{ quote .Values.auth.postgres.user }}
  POSTGRES_PASSWORD: {{ quote .Values.auth.postgres.password }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.auth.name }}-redis-config
data:
  redis.conf: |
    masterauth {{ .Values.auth.redis.password }}
    requirepass {{ .Values.auth.redis.password }}
    bind 0.0.0.0
    protected-mode no
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    pidfile "/var/run/redis_6379.pid"
    loglevel notice
    logfile ""
    databases 16
    always-show-logo yes
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename "dump.rdb"
    rdb-del-sync-files no
    dir "/data"
    replica-serve-stale-data yes
    replica-read-only yes
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    repl-diskless-load disabled
    repl-disable-tcp-nodelay no
    replica-priority 100
    acllog-max-len 128
    lazyfree-lazy-eviction no
    lazyfree-lazy-expire no
    lazyfree-lazy-server-del no
    replica-lazy-flush no
    lazyfree-lazy-user-del no
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    aof-load-truncated yes
    aof-use-rdb-preamble yes
    lua-time-limit 5000
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    latency-monitor-threshold 0
    notify-keyspace-events ""
    list-max-ziplist-size -2
    list-compress-depth 0
    set-max-intset-entries 512
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
    stream-node-max-bytes 4kb
    stream-node-max-entries 100
    activerehashing yes
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60
    hz 10
    dynamic-hz yes
    aof-rewrite-incremental-fsync yes
    rdb-save-incremental-fsync yes
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.auth.name }}-config
data:
  config.yml: |
    service:
      host: '0.0.0.0'
      port: {{ .Values.auth.service.port }}
      version: {{ .Values.auth.service.version }}
      name: {{ .Values.auth.service.name }}
    postgres:
      host: {{ .Values.auth.postgres.name }}
      port: {{ .Values.auth.postgres.port }}
      user: {{ .Values.auth.postgres.user }}
      password: {{ .Values.auth.postgres.password }}
      db_name: {{ .Values.auth.postgres.dbName }}
      ssl_mode: {{ .Values.auth.postgres.sslMode }}
      max_conns: {{ .Values.auth.postgres.maxConns }}
      min_conns: {{ .Values.auth.postgres.minConns }}
      max_conn_lifetime: {{ .Values.auth.postgres.maxConnLifeTime }}
      max_conn_idle_time: {{ .Values.auth.postgres.maxConnIdleTime }}
      health_check_duration: {{ .Values.auth.postgres.healthCheckDuration }}
    redis:
      host: {{ .Values.auth.redis.name }}
      port: {{ .Values.auth.redis.port }}
      password: {{ .Values.auth.redis.password }}
    auth:
      refresh_life_time: {{ .Values.auth.service.auth.refreshLifeTime }}
      access_life_time: {{ .Values.auth.service.auth.accessLifeTime }}
      secret: {{ .Values.auth.service.auth.secret }}
    secrets_path:
      {{ .Values.core.service.name }}:
        api_public: 'config/public.yaml'
        api_private: 'config/private.yaml'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.core.name}}-postgres-secret
  labels:
    app: {{ .Values.core.name}}-postgres
data:
  POSTGRES_DB: {{ quote .Values.core.postgres.dbName }}
  POSTGRES_USER: {{ quote .Values.core.postgres.user }}
  POSTGRES_PASSWORD: {{ quote .Values.core.postgres.password }}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.core.name }}-config
data:
  config.yml: |
    service:
      host: '0.0.0.0'
      port: {{ .Values.core.service.port }}
      version: {{ .Values.core.service.version }}
      name: {{ .Values.core.service.name }}
    postgres:
      host: {{ .Values.core.postgres.name }}
      port: {{ .Values.core.postgres.port }}
      user: {{ .Values.core.postgres.user }}
      password: {{ .Values.core.postgres.password }}
      db_name: {{ .Values.core.postgres.dbName }}
      ssl_mode: {{ .Values.core.postgres.sslMode }}
      max_conns: {{ .Values.core.postgres.maxConns }}
      min_conns: {{ .Values.core.postgres.minConns }}
      max_conn_lifetime: {{ .Values.core.postgres.maxConnLifeTime }}
      max_conn_idle_time: {{ .Values.core.postgres.maxConnIdleTime }}
      health_check_duration: {{ .Values.core.postgres.healthCheckDuration }}
    tg_bot:
      token: {{ .Values.core.tgBot.token }}
      chat_id: {{ .Values.core.tgBot.chatId }}
    secrets_path:
      {{ .Values.auth.service.name }}:
        api_public: 'config/public.yaml'
        api_private: 'config/private.yaml'