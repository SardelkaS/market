apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.auth.name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.auth.name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Values.auth.name }}-postgres
    spec:
      containers:
        - name: {{ .Values.auth.name }}-postgres
          image: {{ .Values.image.postgres }}
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          resources:
            {{- toYaml .Values.auth.postgres.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Values.auth.name }}-postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: {{ .Values.auth.name }}-postgres-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.auth.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.auth.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ .Values.auth.name }}
    spec:
      containers:
        - image: {{ .Values.image.auth }}
          imagePullPolicy: Always
          name: {{ .Values.auth.name }}-app
          ports:
            - containerPort: {{ .Values.auth.service.port }}
              name: {{ .Values.auth.name }}
              protocol: TCP
          resources:
            {{- toYaml .Values.auth.service.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 511
            name: {{ .Values.auth.name }}-config
          name: config-volume
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.core.name }}-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.core.name }}-postgres
  template:
    metadata:
      labels:
        app: {{ .Values.core.name }}-postgres
    spec:
      containers:
        - name: {{ .Values.core.name }}-postgres
          image: {{ .Values.image.postgres }}
          imagePullPolicy: Always
          ports:
            - containerPort: 5432
          resources:
            {{- toYaml .Values.core.postgres.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ .Values.core.name }}-postgres-secret
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgresdata
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: {{ .Values.core.name }}-postgres-volume-claim
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.core.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      name: {{ .Values.core.name }}
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: {{ .Values.core.name }}
    spec:
      containers:
        - image: {{ .Values.image.core }}
          imagePullPolicy: Always
          name: {{ .Values.core.name }}-app
          ports:
            - containerPort: {{ .Values.core.service.port }}
              name: {{ .Values.core.name }}
              protocol: TCP
          resources:
            {{- toYaml .Values.core.service.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /config
              name: config-volume
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      terminationGracePeriodSeconds: 30
      volumes:
        - configMap:
            defaultMode: 511
            name: {{ .Values.core.name }}-config
          name: config-volume